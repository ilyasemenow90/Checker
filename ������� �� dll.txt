


// Сделать ход move
// Формат ходов: "a3b4" и "a3:b4:d6:e7". Такой формат позволяет устранить все неоднозначности при взятиях
void EI_MakeMove(char *move)




// Начать вычисления. После вернуть лучший ход
// Эта функция может выполняться как угодно долго
// Но надо иметь в виду количество оставшегося времени (см. EI_SetTimeControl и EI_SetTime)
char * EI_Think()



// Противник делает ход move
// Перед этим вызывалась функция Ponder
// Здесь сразу можно вернуть ход на основе вычиcлений сделанных в Ponder
// Можно подумать еще и только после этого вернуть ход
 char * EI_PonderHit(char *move)



// Инициализация движка
// si - см. выше описание PF_SearchInfo
// mem_lim - лимит памяти, которую может использовать движок
// здесь в основном имеется ввиду размер хэш-таблицы
 void  EI_Initialization(PF_SearchInfo si, int mem_lim)



//новая игра (устанавливает доску в начальный параметр)
void  EI_NewGame()



// Закончить вычисления и выйти из функций EI_Think, EI_Ponder, EI_PonderHit или EI_Analyse
void  EI_Stop()



// Установить позицию pos на доске
// например, начальная позиция bbbbbbbbbbbb........wwwwwwwwwwwww
// b - простая черная
// B - черная дамка
// w - простая белая
// W - белая дамка
// . - пустое поле
// поля перечисляются так: b8, d8, f8, h8, a7, c7, ..., a1, c1, e1, g1
// последний символ определяет очередность хода
// w - белые, b - черные
void  EI_SetupBoard(char *pos)



// Установить контроль времени
// time минут на партию
// inc миллисекунд - бонус за каждый сделанный ход (часы Фишера)
void  EI_SetTimeControl(int time, int inc)

// Установить время в миллисекундах оставшееся на часах
// time - свое время
// otime - время противника
// вызывается перед каждым ходом
extern "C" __declspec(dllexport) void __stdcall EI_SetTime(int time, int otime)
{
	SetTime(time, otime);
}


// Вернуть название движка
char * EI_GetName()

// Вызывается перед выгрузкой движка
void EI_OnExit()





// функция обратного вызова для отображения информации о ходе вычислений
// score - оценка позиции.
//         выигрыш лучше обозначать так: 32767 - N, где N это количество полуходов до выигрыша
//         выигрыш по безранговой базе, лучше обозначать так: 30000 - N
// depth - информация о глубине перебора
// pv - лучший вариант
// cm - ход анализируемый в данный момент
typedef void (__stdcall *PF_SearchInfo)(int score, int depth, int speed, char *pv, char *cm);
PF_SearchInfo pfSearchInfo = 0;

// второй вариант
// все параметры строковые
// для улучшенного отображения информации о переборе
typedef void (__stdcall *PF_SearchInfoEx)(char *score, char *depth, char *speed, char **pv, char *cv);
PF_SearchInfoEx pfSearchInfoEx = 0;





























